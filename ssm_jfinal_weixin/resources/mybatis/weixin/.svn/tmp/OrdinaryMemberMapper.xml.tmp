<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrdinaryMemberMapper">
	
	<!--表名 -->
	<sql id="tableName">
		weixin_member
	</sql>
	<!-- 字段 -->
	<sql id="Field">
		openid,	
		nick_name,
		name,
		photo,	
		sex,
		phone,
		mobile,
		email,
		create_date,	
		canceled,	
		level_id,
		parent_id,
		ordinarymember_id,
		dr
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{openid},
		#{nick_name},	
		#{name},
		#{photo},
		#{sex},
		#{phone},
		#{mobile},
		#{email},	
		#{create_date},	
		#{canceled},		
		#{level_id},
		#{parent_id},
		#{ordinarymember_id},
		#{dr}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) 
		values
		(
		#{openid},
		#{nick_name},	
		#{name},
		#{photo},
		#{sex},
		#{phone},
		#{mobile},
		#{email},	
		#{create_date},	
		#{canceled},		
		#{level_id},
		#{parent_id},
		#{ordinarymember_id},
		0
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ordinarymember_id = #{ordinarymember_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			<!-- nick_name = #{nick_name},
			name = #{name},
			photo = #{photo},
			sex = #{sex},	 -->		
			phone = #{phone},
			<!-- mobile = #{mobile}, -->
			email = #{email},
			<!-- create_date = #{create_date}, -->
			<!-- canceled = #{canceled}, -->
			level_id = #{level_id}
			<!-- parent_id = #{parent_id} -->
		where 
		openid = #{openid}
	</update>
	
	<!-- 根据id删除(不是真正删除，修改dr由0变为1) -->
	<update id="updateDrById" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			dr = 1
		where 
		openid = #{openid}
	</update>
	
	<!-- 根据id批量删除(批量修改dr由0变为1) -->
	<update id="updateAllDr" parameterType="String">
		update 
		<include refid="tableName"></include>
		set 
			dr = 1
		where 
			openid in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd"> 
		select
		c.*,
		a.amount
		from
		(
		select
		w.*,	
		m.level_name
		from 
		weixin_member w
		left join
		member_level m
		on
		w.level_id = m.id
		)  c
		left join
		weixin_wallet a
		on
		c.openid = a.open_id
		where 
			c.openid = #{openid}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		c.*,
		a.amount
		from
		(
		select
		w.*,	
		m.level_name
		from 
		weixin_member w
		left join
		member_level m
		on
		w.level_id = m.id
		)  c
		left join
		weixin_wallet a
		on
		c.openid = a.open_id
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 c.openid LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					 c.name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or  
					 c.nick_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and c.create_date &gt;= #{pd.lastStart} 
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and c.create_date &lt;= #{pd.lastEnd} 
		</if>
		<if test="pd.min!=null and pd.min!=''"><!-- 最小余额检索 -->
			and a.amount &gt;= #{pd.min} 
		</if>
		<if test="pd.max!=null and pd.max!=''"><!-- 最大余额检索 -->
			and a.amount &lt;= #{pd.max} 
		</if>
		and c.dr = 0
		order by c.create_date desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ordinarymember_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	
	<!-- 定时更新计划   -->
	<!-- 通过openId更新会员信息 -->
	<update id="updateByOpenId" parameterType="pd">
	UPDATE weixin_member SET 
	nick_name = #{nick_name}, 
	name = #{nick_name},
	photo=#{photo}
	WHERE openid=#{open_id}
	</update>
	<!-- 是否存在记录 -->
	<select id="isExistByOpenId" parameterType="String" resultType="Integer">
	SELECT COUNT(id) FROM weixin_member WHERE openid=#{open_id}
	</select>
	
	
	
	
	
	
	<!-- () -->
</mapper>