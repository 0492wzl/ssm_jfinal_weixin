<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderMapper">
	<!--表名 -->
	<sql id="tableName">
		weixin_order
	</sql>
	<!-- 字段 -->
	<sql id="Field">
		order_id,
		prepay_id,
		transaction_id,
		openid,
		phone,
		effective_type,
		attribution,
		amount,
		product_id,
		product_price,
		settlement_price,
		cost_price,
		profit,
		settlement_method,
		status,
		recharge_dttm,
		note,
		serial,
		interface_id,
		log,
		chnnl_type,
		dr
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{openid},
		#{nick_name},
		#{name},
		#{photo},
		#{sex},
		#{phone},
		#{mobile},
		#{email},
		#{create_date},
		#{canceled},
		#{level_id},
		#{parent_id},
		#{ordinarymember_id},
		#{dr}
	</sql>

	<!-- 新增 -->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		)
		values
		(
		#{openid},
		#{nick_name},
		#{name},
		#{photo},
		#{sex},
		#{phone},
		#{mobile},
		#{email},
		#{create_date},
		#{canceled},
		#{level_id},
		#{parent_id},
		#{ordinarymember_id},
		0
		)
	</insert>

	<!-- 删除 -->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
		ordinarymember_id = #{ordinarymember_id}
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		nick_name = #{nick_name},
		name = #{name},
		photo = #{photo},
		sex =
		#{sex},
		phone = #{phone},
		mobile = #{mobile},
		email = #{email},
		create_date = #{create_date},
		canceled = #{canceled},
		level_id =
		#{level_id},
		parent_id = #{parent_id}
		where
		openid = #{openid}
	</update>

	<!-- 根据id删除(不是真正删除，修改dr由0变为1) -->
	<update id="updateDrById" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		dr = 1
		where
		openid = #{openid}
	</update>

	<!-- 批量更新订单状态为成功 -->
	<update id="updateStatusSuccess" parameterType="String">
		update
		<include refid="tableName"></include>
		set
		status = 1
		where
		order_id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<!-- 批量更新订单状态为失败 -->
	<update id="updateStatusFail" parameterType="String">
		update
		<include refid="tableName"></include>
		set
		status = 0
		where
		order_id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		w.openid,
		w.nick_name,
		w.name,
		w.photo,
		w.sex,
		w.phone,
		w.mobile,
		w.email,
		w.create_date,
		w.canceled,
		w.level_id,
		w.parent_id,
		w.ordinarymember_id,
		w.dr,
		m.level_name
		from
		weixin_member w
		left join
		member_level m
		on
		w.level_id = m.id
		where
		w.openid = #{openid}
	</select>

	<!-- 所有列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
SELECT
		o.*,
		m.nick_name
		FROM
		(
		SELECT
	e.order_id,	
    e.order_no,
    e.phone,
    e.product_price,
    e.settlement_price,
    e.chnnl_type,
    e.region,
    e.attribution,
    e.log,
    e.paystatus,
    e.settlement_method,
    e.status,
	e.recharge_dttm,
    e.openid,
		p.product_name
		FROM
		weixin_order e
		LEFT JOIN
		weixin_product p
		ON
		e.product_id = p.product_id
		WHERE
		e.dr =0
		AND (e.type = 0 or e.type =2)
		) o
		LEFT JOIN
		weixin_member m
		ON
		o.openid = m.openid
		WHERE 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			o.order_id LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			o.product_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			m.nick_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			o.phone LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			<!-- 根据需求自己加检索条件 字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or 字段2 
				LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') -->
			)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and o.recharge_dttm &gt;= #{pd.lastStart}
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and o.recharge_dttm &lt;= #{pd.lastEnd}
		</if>
		<if test="pd.paystatus!=null and pd.paystatus!=''">
			and o.paystatus = #{pd.paystatus}
		</if>
		<if test="pd.paystatus==null or pd.paystatus==''">
			and o.paystatus = 1
		</if>
		<if test="pd.status!=null and pd.status!=''">
			and o.status = #{pd.status}
		</if>
		<if test="pd.settlement_method!=null and pd.settlement_method!=''">
			and o.settlement_method = #{pd.settlement_method}
		</if>
		<if test="pd.chnnl_type!=null and pd.chnnl_type!=''">
			and o.chnnl_type = #{pd.chnnl_type}
		</if>
		<if test="pd.region!=null and pd.region!=''">
			and o.region = #{pd.region}
		</if>
		<if test="pd.is_today != null and pd.is_today != 1 ">
		AND TO_DAYS(NOW()) - TO_DAYS(o.recharge_dttm) = 0
		</if>
		ORDER BY o.recharge_dttm DESC
	</select>

	<!-- 统计 -->
	<select id="countOrder" parameterType="page" resultType="pd">
		select
		count(o.product_id) total,
		IFNULL(SUM(IFNULL(o.product_price,0)),0) totalProductPrice,
		IFNULL(SUM(IFNULL(o.settlement_price,0)),0) totalSettlementPrice,
		IFNULL(SUM(IFNULL(o.cost_price,0)),0) totalCostPrice,
		IFNULL(SUM(IFNULL(o.profit,0)),0) totalProfit
		from
		(
		select
	e.order_id,	
    e.order_no,
    e.phone,
    e.product_price,
    e.settlement_price,
    e.chnnl_type,
    e.region,
    e.paystatus,
    e.settlement_method,
    e.status,
	e.recharge_dttm,
    e.openid,
    e.cost_price,
    e.product_id,
    e.profit,
		p.product_name
		from
		weixin_order e
		left join
		weixin_product p
		on
		e.product_id = p.product_id
		where
		e.dr =0
		AND e.type = 0
		) o
		left join
		weixin_member m
		on
		o.openid = m.openid
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			o.order_id LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			o.product_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			m.nick_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			o.phone LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			<!-- or w.nick_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') -->
			<!-- 根据需求自己加检索条件 字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') or 字段2 
				LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') -->
			)
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''"><!-- 开始时间检索 -->
			and o.recharge_dttm &gt;= #{pd.lastStart}
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''"><!-- 结束时间检索 -->
			and o.recharge_dttm &lt;= #{pd.lastEnd}
		</if>
		<if test="pd.paystatus!=null and pd.paystatus!=''">
			and o.paystatus = #{pd.paystatus}
		</if>
		<if test="pd.paystatus==null or pd.paystatus==''">
			and o.paystatus = 1
		</if>
		<if test="pd.status!=null and pd.status!=''">
			and o.status = #{pd.status}
		</if>
		<if test="pd.settlement_method!=null and pd.settlement_method!=''">
			and o.settlement_method = #{pd.settlement_method}
		</if>
		<if test="pd.chnnl_type!=null and pd.chnnl_type!=''">
			and o.chnnl_type = #{pd.chnnl_type}
		</if>
		<if test="pd.region!=null and pd.region!=''">
			and o.region = #{pd.region}
		</if>
		<if test="pd.is_today != null and pd.is_today != 1 ">
		AND TO_DAYS(NOW()) - TO_DAYS(o.recharge_dttm) = 0
		</if>		
		order by o.recharge_dttm desc
	</select>

	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
	</select>

	<!-- 列表到EXCEL(全部) -->
	<select id="listAllToExcel" parameterType="pd" resultType="pd">
		SELECT
		m.name,o.phone,o.attribution,p.product_name,o.product_price,o.settlement_price,
		IFNULL(o.log,'') log,(CASE o.settlement_method WHEN 1 THEN '微信支付' WHEN
		2 THEN '钱包支付' END) settlement_method,
		(CASE o.paystatus WHEN 0 THEN '支付失败' WHEN 1 THEN '支付成功' WHEN 2 THEN '已退款'
		WHEN 3 THEN '待付款' ELSE '' END) paystatus,
		(CASE o.status WHEN 0 THEN '充值失败' WHEN 1 THEN '充值成功' WHEN 2 THEN '处理中' END)
		status,o.ts
		FROM weixin_order o LEFT JOIN weixin_member m ON
		o.openid = m.openid LEFT JOIN weixin_product p ON
		o.product_id = p.product_id
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		ordinarymember_id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- () -->
</mapper>